cbuffer LightBuffer {
    float4 LightPosition;  // 世界空间中的光源位置
    float4 LightColor;     // 光源颜色和强度
    float4x4 W;   // 世界矩阵
    float4x4 VP;  // 相机视图投影矩阵
};


// 输入结构
struct VS_INPUT {
    float4 Pos : POS;
    float3 Normal : NORMAL;
    float2 TexCoords : TEXCOORD;
};

// 输出到像素着色器的结构
struct PS_INPUT {
    float4 Pos : SV_POSITION;  // 屏幕空间位置
    float3 WorldPos : POSITION;  // 世界空间中的位置
    float3 Normal : NORMAL;  // 世界空间中的法线
    float2 TexCoords : TEXCOORD;  // 纹理坐标
};

PS_INPUT VS(VS_INPUT input) {
    PS_INPUT output;

    // 1. 将顶点从模型空间转换到世界空间
    float4 worldPos = mul(input.Pos, W);
    output.WorldPos = worldPos.xyz;

    // 2. 将世界空间中的位置转换到屏幕空间
    output.Pos = mul(worldPos, VP);

    // 3. 转换法线
    float3 normal = mul(input.Normal, (float3x3)W);
    output.Normal = normalize(normal);

    // 4. 传递纹理坐标
    output.TexCoords = input.TexCoords;

    return output;
}

