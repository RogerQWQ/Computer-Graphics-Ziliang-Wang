cbuffer staticMeshBuffer {
	float4x4 W;
	float4x4 VP;
};

cbuffer WaveBuffer : register(b2) {
	float time;
	float waveAmplitude;
	float waveFrequency;
	float waveSpeed;
	float2 waveDirection;
};

struct VS_INPUT {
	float4 Pos : POS;
	float3 Normal : NORMAL;
	float2 TexCoords : TEXCOORD;
};

struct PS_INPUT {
	float4 Pos : SV_POSITION;
	float3 Normal : NORMAL;
	float2 TexCoords : TEXCOORD;
};

PS_INPUT VS(VS_INPUT input) {
	PS_INPUT output;

	// 计算波浪变形
	float waveOffset = sin(dot(input.Pos.xz, waveDirection) * waveFrequency + time * waveSpeed) * waveAmplitude;

	// 顶点位置变换
	float4 worldPos = input.Pos;
	worldPos.y += waveOffset+1;

	// 应用变换
	output.Pos = mul(worldPos, W);
	output.Pos = mul(output.Pos, VP);

	// 更新法线（模拟波浪方向）
	output.Normal = normalize(mul(input.Normal, (float3x3)W));
	output.TexCoords = input.TexCoords;

	return output;
}
